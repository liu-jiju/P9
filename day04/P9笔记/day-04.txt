void用来表示函数的并且没有返回值

1.索引类型
绕开多余属性时，[]中间的内容是可变的

2.接口继承 是一个公共接口类型定义  通过extends

3.混合接口类型
变量永久保存不会被污染
变量只是内部使用
定义每个类型，方便维护
防止被污染 放到闭包里形成独立的作用域
（函数自调用（）（）)
const countUps=(()=>{
let count=0;
return()=>{
return ++count
}
})()

4.手动添加对象属性
let obj = {}
 obj.name = '小红'
 
 // javascript
 let countUp = () => {
     return ++countUp.count;
   };
   countUp.count = 0;
   console.log(countUp()); // 1
   console.log(countUp()); // 2

5.闭包的概念
1.函数套函数
2.外部不能获取内部变量
3.返回函数
4.内部可以获取外部变量
5.是自调用函数

6.在ts中如何使用闭包实现上面的方式
interface Counter {
    (): void;
    count: number;
}

const getCounter = (): Counter => {
    const C = () => {
        C.count++
    }
    C.count = 0;
    return C
}

const counter:Counter = getCounter()
counter()
console.log(counter.count);
counter()
console.log(counter.count);


栈是从上往下放东西 堆是先进后出