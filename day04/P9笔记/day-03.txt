1 interface （固定的）
2可选属性？（可选的）
3 绕开多余属性 [prop：string]：any （太多的时候）

基本用法 ：使用interface采定义接口，定义接口的时候不要把他理解为是在定义一个对象，而要理解为{}括号包裹的是一个代码块，
里面是一条条声明语句，只不过声明的不是变量的值而是类型

可选属性 ：有时不是所有定义在interface中的属性都是必须的，typescript中便为我们提供了可选属性

多余属性检查 定义的变量比接口少了一些或者多了一些属性是不允许的

绕开多余属性检查：使用类型断言（as），添加索引签名(<>)，利用类型兼容性

只读属性 使用const定义一个对象，然后修改对象里的属性的值是不会报错的
要保证对象的属性值不可修改需要使用readonly

函数类型：接口可以描述普通对象，还可以描述函数类型
实际定义函数的时候名字是无需和接口中参数名相同的，只需要位置对应即可