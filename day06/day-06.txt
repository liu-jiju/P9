泛型：
       1.基本简单使用：
	1.1：泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，
	        而在使用的时候再指定类型的一种特性, 使用标识符号<T>。
       2.泛型变量：
	2.1：当我们使用泛型的时候，必须在处理类型涉及到泛型的数据的时候，把这个数据当做任意类型来处理。
	        这就意味着不是所有类型都可以操作，页不是所有类型都都有每个属性。
       3.泛型类型函数：
	我们可以定义一个泛型函数类型，也可以定义一个接口的函数。
	还可以把接口中的泛型变量提到最外层，这样在最内层都可以使用这个变量
       4.使用泛型约束泛型变量：
	泛型约束：当我们使用了泛型时，就意味着这个这个类型是任意类型。但在大多数情况下，我们是对特定类型处理的。
	在泛型类型中使用特定的类型参数

类的定义：ES6中类的定义：对类进行实例化、调用类的方法、获取类的属性。
	TS中类的定义：对类进行实例化、调用类的方法、获取类的属性。
类的修饰符：public :         公有，类里面、子类、类外面都可以访问
	   protected :  保护类型 类里面、子类可以访问  类外面不可以访问
	   private :	私有类型 类里面可以访问，其他不行
静态属性和静态方法：使用static修饰静态属性，静态属性不能在实例上获取。
多态：定义：父类定义一个方法不去实现，让继承他的子类去实现，每一个子类有不同的表现
          实现：首先声明一个父类，父类中声明一个方法，不去实现
	    声明一个类继承父类，并且实现 eat 方法
	    再声明一个类继承父类，并且实现 eat 方法

抽象类：定义：提供其他类继承的基类，不能直接被实例化
             语法：abstract class 类名 {}
             方法：abstract 方法名():{}。
	抽象方法不能脱离抽象类使用ts，抽象方法只能出现在抽象类中。
	抽象方法不能有具体体现，抽象方法不能有具体体现，只能在派生类中实现

接口约束类：类类型接口，和抽象类很类似，是用来约束类的；也就是类中必须有哪些属性和方法
接口继承：声明一个接口，要求有一个name属性、声明一个接口继承上述接口、实现接口约束类
	